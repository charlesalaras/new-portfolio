---
	const { pathname } = Astro.props;
	// Outer BG acts as the background gradient
	// Inner BG acts as an SVG mask of repeated bezier curves and gradient masks
	// If dark: filter: brightness(7%);
	const colors = {
	"/": "var(--secondary)",
	"/about": "var(--accent-1)",
	"/projects": "var(--accent-2)",
	"/contact": "var(--accent-3)",
	}
	const secondaryColor = colors[pathname];
---

<div class="bg">
	<div class="inner-bg" id="bg-mask"></div>
</div>

<style define:vars={{ secondaryColor }}>
@keyframes Gradient {
	0% {background-position: 0% 33%}
	50% {background-position: 100% 66%}
	100% {background-position: 0% 33%}
}
html .bg {
	background-image: repeating-linear-gradient(45deg, var(--primary-light) 0%, var(--secondaryColor) 10%, var(--primary-light) 20%);
}
html.dark .bg {
	background-image: repeating-linear-gradient(45deg, var(--primary-dark) 0%, var(--secondaryColor) 10%, var(--primary-dark) 20%);
}
.bg {
	width: 100vw;
	height: 100vh;
	position: absolute;
	top: 0px;
	left: 0px;
	background-size: 400% 400%;
	animation: Gradient 60s ease infinite;
	z-index: -2;
}
.inner-bg {
	width: 100%;
	background: url("bg.svg") center / 100% 100% no-repeat;
	height: 100%;
	z-index: -1;
}
</style>
