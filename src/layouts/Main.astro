---
import '../../node_modules/modern-normalize/modern-normalize.css'
import '../styles/global.css'
import Toggle from '@lib/Toggle.astro'

const translations = {
	"/": "0rem",
	"/about": "4rem",
	"/projects": "8rem",
	"/contact": "12rem",
	"/epilogue": "16rem"
};

const strokes = {
	"/": "4.71em",
	"/about": "3.768em",
	"/projects": "2.826em",
	"/contact": "1.884em",
	"/epilogue": "0.942em"
};

const { pathname } = Astro.props
const translation = translations[pathname]
const semicircle = strokes[pathname]
---
<script is:inline>
	const theme = (() => {
		if(typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
			return localStorage.getItem("theme");
		}
		if(window.matchMedia("(prefers-color-scheme: dark)").matches) {
			return "dark";
		}
		return "light";
	})();

	if(theme === "light") {
		document.documentElement.classList.remove("dark");
	} else {
		document.documentElement.classList.add("dark");
	}
	window.localStorage.setItem("theme", theme);
</script>
<head>
	<link rel="icon" href="./lighticon.ico">
</head>
<html lang="en">
	<body>
		<div class="titles" id="sections">
			<h1 class="header"><Toggle/>Charles Alaras</h1>
				<h1 class={pathname === "/" ? "active" : "inactive"}><a href="/">Home</a></h1>
				<h1 class={pathname === "/about" ? "active" : "inactive"}><a href="/about">About</a></h1>
				<h1 class={pathname === "/projects" ? "active" : "inactive"}><a href="/projects">Projects</a></h1>
				<h1 class={pathname === "/contact" ? "active" : "inactive"}><a href="/contact">Contact</a></h1>
				<h1 class={pathname === "/epilogue" ? "active" : "inactive"}><a href="/epilogue">Epilogue</a></h1>
		</div>
		<div class="breakpoint" id="lines">
			<div class="progress">
				<svg>
					<circle class="indicator" cx="50%" cy="50%" r="0.75em" id="indicator"/>
				</svg>
			</div>
		</div>
		<main>
			<slot/>
		</main>
	</body>
</html>

<style define:vars={{ translation, semicircle }}>
	html {
		display: flex;
		justify-content: center;
		align-items: center;
		color: var(--fg0);
		width: 100vw;
		height: 100vh;
		background-size: cover !important;
		background-position: bottom !important;
		background-repeat: no-repeat !important;
	}
	body {
		width: 100%;
		height: 24rem;
		display: flex;
		flex-direction: row;
		justify-content: center;
		align-items: center;
		gap: 1rem;
	}
	.titles {
		height: 100%;
		font-weight: 700;
		text-align: right;
	}
	h1.inactive {
		color: var(--dim);
	}
	.breakpoint {
		height: 100%;
		width: 4rem;
		background: linear-gradient(var(--dim), var(--dim)) no-repeat center/1px 100%;
	}
	.breakpoint:after {
		display: inline-block;
		content: "";
		width: 4rem;
		height: 4rem;
		background: linear-gradient(transparent, var(--blue), transparent) no-repeat center/2px 100%;
		transform: translateY(var(--translation));
		transition: all 0.2s ease-in-out;
	}
	.progress {
		width: 4rem;
		height: 4rem;
		background-color: var(--bg0);
		border: 1px solid var(--dim);
		border-radius: 2rem;
		display: flex;
		align-items: center;
		justify-content: center;
		padding: 0.25rem;
	}
	svg {
		width: 100%;
		height: 100%;
	}
	.indicator {
		fill: transparent;
		stroke: var(--blue);
		stroke-width: 1.5em;
		stroke-dasharray: 4.71em;
		stroke-dashoffset: var(--semicircle);
		transform: rotate(-90deg);
		transform-origin: center;
		transition: stroke-dashoffset 0.2s ease-in-out;
	}
	main {
		width: 55ch;
	}
	.header {
		display: flex;
		flex-direction: row;
		align-items: center;
		gap: 0.5rem;
	}
</style>
